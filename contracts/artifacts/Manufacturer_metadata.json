{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "RegisterId",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "CarBrand",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "CarModel",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "CarColor",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "Merikelrootvalue",
						"type": "string"
					}
				],
				"name": "CreateRegistrationContract",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"name": "FindVehicleContractAddress",
				"outputs": [
					{
						"internalType": "contract Vehicle",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "VehicleDepolyList",
				"outputs": [
					{
						"internalType": "contract Vehicle",
						"name": "vehicle",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "CreatedTime",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "vehicleContactAddress",
						"type": "address"
					}
				],
				"name": "getVehicleDetails",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/_Manufacturer.sol": "Manufacturer"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/utils/Strings.sol": {
			"keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
			"license": "MIT",
			"urls": [
				"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
				"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
			]
		},
		"@openzeppelin/contracts/utils/math/Math.sol": {
			"keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
			"license": "MIT",
			"urls": [
				"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
				"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
			]
		},
		"contracts/_Manufacturer.sol": {
			"keccak256": "0xea5df60f078fa336cd02dfdfbaea56e6d7eae4abb581cb9ded7f28f962f0beeb",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://dd809a1915589edd1d2327ce30e9bb0c9283605eb071cc71b73736123f0b5278",
				"dweb:/ipfs/QmVSYoqWz8EYax5RvC5KeJYuWEJwG8BHG9byyVSMECB97N"
			]
		},
		"contracts/_Vehicle.sol": {
			"keccak256": "0x499ef51a0d004b5572c3819ca0ff158c3f7c8362f2a1ea0d6e3a3a7e7d901c6d",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://0c6af16cea56794427a19ff3d117831ea361c7991136ca4ccaf1813e59628f16",
				"dweb:/ipfs/QmW9xY2mRtqct3LmPh25Gx8Ndpv4gEeroaqmsgWq5KFjhY"
			]
		}
	},
	"version": 1
}